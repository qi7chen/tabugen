// This file is auto-generated by Tabugen v1.2.0, DO NOT EDIT!

using System;
using System.Collections.Generic;

namespace Config {

// this interface define CSV data retrieving
public interface IDataFrame
{
    int ColumnCount { get; }
    int RowCount { get; }
    bool HasColumn(string name);
    string GetRowCell(string name, int index);
    string GetKeyField(string key);
}

// GlobalDefine,  generated from GlobalDefine.xlsx
public struct GlobalDefine 
{
    public float                      GoldExchangeTimeFactor1 = 0;                             // 金币兑换时间参数1
    public float                      GoldExchangeTimeFactor2 = 0;                             // 金币兑换时间参数2
    public float                      GoldExchangeTimeFactor3 = 0;                             // 金币兑换时间参数3
    public int                        GoldExchangeResource1Price = 0;                          // 金币兑换资源1价格
    public int                        GoldExchangeResource2Price = 0;                          // 金币兑换资源2价格
    public int                        GoldExchangeResource3Price = 0;                          // 金币兑换资源3价格
    public int                        GoldExchangeResource4Price = 0;                          // 金币兑换资源4价格
    public int                        FreeCompleteSeconds = 0;                                 // 免费立即完成时间
    public int                        CancelBuildReturnPercent = 0;                            // 取消建造后返还资源比例
    public bool                       EnableSearch = false;                                    // 开启搜索
    public List<int>                  SpawnLevelLimit = new List<int>();                       // 最大刷新个数显示
    public Dictionary<string, int>    FirstRechargeReward = new Dictionary<string, int>();     // 首充奖励
    public Dictionary<int, int>       VIPItemReward = new Dictionary<int, int>();              // VIP奖励

	public GlobalDefine() {
	}


    public void ParseFrom(IDataFrame table)
    {
        this.GoldExchangeTimeFactor1 = Conv.ParseFloat(table.GetKeyField("GoldExchangeTimeFactor1"));
        this.GoldExchangeTimeFactor2 = Conv.ParseFloat(table.GetKeyField("GoldExchangeTimeFactor2"));
        this.GoldExchangeTimeFactor3 = Conv.ParseFloat(table.GetKeyField("GoldExchangeTimeFactor3"));
        this.GoldExchangeResource1Price = Conv.ParseInt(table.GetKeyField("GoldExchangeResource1Price"));
        this.GoldExchangeResource2Price = Conv.ParseInt(table.GetKeyField("GoldExchangeResource2Price"));
        this.GoldExchangeResource3Price = Conv.ParseInt(table.GetKeyField("GoldExchangeResource3Price"));
        this.GoldExchangeResource4Price = Conv.ParseInt(table.GetKeyField("GoldExchangeResource4Price"));
        this.FreeCompleteSeconds = Conv.ParseInt(table.GetKeyField("FreeCompleteSeconds"));
        this.CancelBuildReturnPercent = Conv.ParseInt(table.GetKeyField("CancelBuildReturnPercent"));
        this.EnableSearch = Conv.ParseBool(table.GetKeyField("EnableSearch"));
        this.SpawnLevelLimit = Conv.ParseArray<int>(table.GetKeyField("SpawnLevelLimit"));
        this.FirstRechargeReward = Conv.ParseMap<string, int>(table.GetKeyField("FirstRechargeReward"));
        this.VIPItemReward = Conv.ParseMap<int, int>(table.GetKeyField("VIPItemReward"));
    }

}

// ItemBoxDefine,  generated from ItemBox.xlsx
public struct ItemBoxDefine 
{
    public string          ID = "";         // 唯一ID
    public int             Total = 0;       // 全部数量
    public int             Time = 0;        // 次数
    public string          Repeat = "";     // 可重复抽取
    public List<string>    GoodsIDs = new List<string>(); // 道具ID
    public List<long>      Nums = new List<long>(); // 道具数量
    public List<int>       Probabilitys = new List<int>(); // 抽取概率

	public ItemBoxDefine() {
	}


    public void ParseRow(IDataFrame table, int rowIndex) 
    {
        this.ID = table.GetRowCell("ID", rowIndex);
        this.Total = Conv.ParseInt(table.GetRowCell("Total", rowIndex));
        this.Time = Conv.ParseInt(table.GetRowCell("Time", rowIndex));
        this.Repeat = table.GetRowCell("Repeat", rowIndex);
        for (int col = 0; col < table.ColumnCount; col++) {
            var name = string.Format("GoodsID[{}]", col);
            if (!table.HasColumn(name)) {
                break;
            }
            var elem = table.GetRowCell(name, rowIndex);
            this.GoodsIDs.Add(elem);
        }
        for (int col = 0; col < table.ColumnCount; col++) {
            var name = string.Format("Num[{}]", col);
            if (!table.HasColumn(name)) {
                break;
            }
            var elem = Conv.ParseLong(table.GetRowCell("Nums", rowIndex));
            this.Nums.Add(elem);
        }
        for (int col = 0; col < table.ColumnCount; col++) {
            var name = string.Format("Probability[{}]", col);
            if (!table.HasColumn(name)) {
                break;
            }
            var elem = Conv.ParseInt(table.GetRowCell("Probabilitys", rowIndex));
            this.Probabilitys.Add(elem);
        }
    }

}

// NewbieGuide,  generated from NewbieGuide.xlsx
public struct NewbieGuide 
{
    public string                     Name = "";                                       // 名称
    public string                     Desc = "";                                       // 描述
    public int                        Category = 0;                                    // 分类
    public string                     Target = "";                                     // 引导目标
    public List<int>                  Accomplishment = new List<int>();                // 需要完成任务
    public Dictionary<string, int>    RewardGoods = new Dictionary<string, int>();     // 任务奖励

	public NewbieGuide() {
	}


    public void ParseRow(IDataFrame table, int rowIndex) 
    {
        this.Name = table.GetRowCell("Name", rowIndex);
        this.Desc = table.GetRowCell("Desc", rowIndex);
        this.Category = Conv.ParseInt(table.GetRowCell("Category", rowIndex));
        this.Target = table.GetRowCell("Target", rowIndex);
        this.Accomplishment = Conv.ParseArray<int>(table.GetRowCell("Accomplishment", rowIndex));
        this.RewardGoods = Conv.ParseMap<string, int>(table.GetRowCell("RewardGoods", rowIndex));
    }

}

// SoldierDefine,  generated from Soldier.xlsx
public struct SoldierDefine 
{
    public int       ID = 0;                // 唯一ID
    public string    Name = "";             // 兵种名称
    public int       Level = 0;             // 等级
    public string    BuildingName = "";     // 需要建筑
    public int       BuildingLevel = 0;     // 建筑等级
    public int       RequireSpace = 0;      // 所占空间
    public int       Volume = 0;            // 体积
    public int       UpgradeTime = 0;       // 升级时间
    public string    UpgradeRes = "";       // 升级消耗
    public int       UpgradeCost = 0;       // 资源消耗数量
    public string    ConsumeRes = "";       // 训练消耗
    public int       ConsumeCost = 0;       // 训练消耗数量
    public int       ConsumeTime = 0;       // 训练时间
    public int       Act = 0;               // 动作
    public int       Hp = 0;                // 血量
    public string    BombLoad = "";         // 装弹量
    public double    AtkFrequency = 0;      // 攻击频率
    public double    AtkRange = 0;          // 攻击距离
    public double    MovingSpeed = 0;       // 移动速度
    public string    EnableBurn = "";       // 开启燃烧

	public SoldierDefine() {
	}


    public void ParseRow(IDataFrame table, int rowIndex) 
    {
        this.ID = Conv.ParseInt(table.GetRowCell("ID", rowIndex));
        this.Name = table.GetRowCell("Name", rowIndex);
        this.Level = Conv.ParseInt(table.GetRowCell("Level", rowIndex));
        this.BuildingName = table.GetRowCell("BuildingName", rowIndex);
        this.BuildingLevel = Conv.ParseInt(table.GetRowCell("BuildingLevel", rowIndex));
        this.RequireSpace = Conv.ParseInt(table.GetRowCell("RequireSpace", rowIndex));
        this.Volume = Conv.ParseInt(table.GetRowCell("Volume", rowIndex));
        this.UpgradeTime = Conv.ParseInt(table.GetRowCell("UpgradeTime", rowIndex));
        this.UpgradeRes = table.GetRowCell("UpgradeRes", rowIndex);
        this.UpgradeCost = Conv.ParseInt(table.GetRowCell("UpgradeCost", rowIndex));
        this.ConsumeRes = table.GetRowCell("ConsumeRes", rowIndex);
        this.ConsumeCost = Conv.ParseInt(table.GetRowCell("ConsumeCost", rowIndex));
        this.ConsumeTime = Conv.ParseInt(table.GetRowCell("ConsumeTime", rowIndex));
        this.Act = Conv.ParseInt(table.GetRowCell("Act", rowIndex));
        this.Hp = Conv.ParseInt(table.GetRowCell("Hp", rowIndex));
        this.BombLoad = table.GetRowCell("BombLoad", rowIndex);
        this.AtkFrequency = Conv.ParseDouble(table.GetRowCell("AtkFrequency", rowIndex));
        this.AtkRange = Conv.ParseDouble(table.GetRowCell("AtkRange", rowIndex));
        this.MovingSpeed = Conv.ParseDouble(table.GetRowCell("MovingSpeed", rowIndex));
        this.EnableBurn = table.GetRowCell("EnableBurn", rowIndex);
    }

}


} // namespace Config 
